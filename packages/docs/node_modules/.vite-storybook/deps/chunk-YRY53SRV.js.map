{
  "version": 3,
  "sources": ["../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/jsdocParser.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/types.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/defaultValue.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/string.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/docgenInfo.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/utils.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createType.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createDefaultValue.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createPropDef.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createType.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createDefaultValue.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createPropDef.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/convert.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/flow/convert.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/convert.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/utils.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/index.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/createPropDef.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/extractDocgenProps.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/argTypes/enhanceArgTypes.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/shared.js", "../../../../../node_modules/@storybook/docs-tools/dist/esm/hasDocsOrControls.js"],
  "sourcesContent": ["import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport doctrine from 'doctrine';\n\nfunction containsJsDoc(value) {\n  return value != null && value.includes('@');\n}\n\nfunction parse(content, tags) {\n  var ast;\n\n  try {\n    ast = doctrine.parse(content, {\n      tags: tags,\n      sloppy: true\n    });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    throw new Error('Cannot parse JSDoc tags.');\n  }\n\n  return ast;\n}\n\nvar DEFAULT_OPTIONS = {\n  tags: ['param', 'arg', 'argument', 'returns', 'ignore']\n};\nexport var parseJsDoc = function parseJsDoc(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n\n  if (!containsJsDoc(value)) {\n    return {\n      includesJsDoc: false,\n      ignore: false\n    };\n  }\n\n  var jsDocAst = parse(value, options.tags);\n  var extractedTags = extractJsDocTags(jsDocAst);\n\n  if (extractedTags.ignore) {\n    // There is no point in doing other stuff since this prop will not be rendered.\n    return {\n      includesJsDoc: true,\n      ignore: true\n    };\n  }\n\n  return {\n    includesJsDoc: true,\n    ignore: false,\n    // Always use the parsed description to ensure JSDoc is removed from the description.\n    description: jsDocAst.description,\n    extractedTags: extractedTags\n  };\n};\n\nfunction extractJsDocTags(ast) {\n  var extractedTags = {\n    params: null,\n    returns: null,\n    ignore: false\n  };\n\n  for (var i = 0; i < ast.tags.length; i += 1) {\n    var tag = ast.tags[i];\n\n    if (tag.title === 'ignore') {\n      extractedTags.ignore = true; // Once we reach an @ignore tag, there is no point in parsing the other tags since we will not render the prop.\n\n      break;\n    } else {\n      switch (tag.title) {\n        // arg & argument are aliases for param.\n        case 'param':\n        case 'arg':\n        case 'argument':\n          {\n            var paramTag = extractParam(tag);\n\n            if (paramTag != null) {\n              if (extractedTags.params == null) {\n                extractedTags.params = [];\n              }\n\n              extractedTags.params.push(paramTag);\n            }\n\n            break;\n          }\n\n        case 'returns':\n          {\n            var returnsTag = extractReturns(tag);\n\n            if (returnsTag != null) {\n              extractedTags.returns = returnsTag;\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return extractedTags;\n}\n\nfunction extractParam(tag) {\n  var paramName = tag.name; // When the @param doesn't have a name but have a type and a description, \"null-null\" is returned.\n\n  if (paramName != null && paramName !== 'null-null') {\n    return {\n      name: tag.name,\n      type: tag.type,\n      description: tag.description,\n      getPrettyName: function getPrettyName() {\n        if (paramName.includes('null')) {\n          // There is a few cases in which the returned param name contains \"null\".\n          // - @param {SyntheticEvent} event- Original SyntheticEvent\n          // - @param {SyntheticEvent} event.\\n@returns {string}\n          return paramName.replace('-null', '').replace('.null', '');\n        }\n\n        return tag.name;\n      },\n      getTypeName: function getTypeName() {\n        return tag.type != null ? extractTypeName(tag.type) : null;\n      }\n    };\n  }\n\n  return null;\n}\n\nfunction extractReturns(tag) {\n  if (tag.type != null) {\n    return {\n      type: tag.type,\n      description: tag.description,\n      getTypeName: function getTypeName() {\n        return extractTypeName(tag.type);\n      }\n    };\n  }\n\n  return null;\n}\n\nfunction extractTypeName(type) {\n  if (type.type === 'NameExpression') {\n    return type.name;\n  }\n\n  if (type.type === 'RecordType') {\n    var recordFields = type.fields.map(function (field) {\n      if (field.value != null) {\n        var valueTypeName = extractTypeName(field.value);\n        return \"\".concat(field.key, \": \").concat(valueTypeName);\n      }\n\n      return field.key;\n    });\n    return \"({\".concat(recordFields.join(', '), \"})\");\n  }\n\n  if (type.type === 'UnionType') {\n    var unionElements = type.elements.map(extractTypeName);\n    return \"(\".concat(unionElements.join('|'), \")\");\n  } // Only support untyped array: []. Might add more support later if required.\n\n\n  if (type.type === 'ArrayType') {\n    return '[]';\n  }\n\n  if (type.type === 'TypeApplication') {\n    if (type.expression != null) {\n      if (type.expression.name === 'Array') {\n        var arrayType = extractTypeName(type.applications[0]);\n        return \"\".concat(arrayType, \"[]\");\n      }\n    }\n  }\n\n  if (type.type === 'NullableType' || type.type === 'NonNullableType' || type.type === 'OptionalType') {\n    return extractTypeName(type.expression);\n  }\n\n  if (type.type === 'AllLiteral') {\n    return 'any';\n  }\n\n  return null;\n}", "// eslint-disable-next-line @typescript-eslint/no-empty-interface\n// export type DocgenType = DocgenPropType | DocgenFlowType | DocgenTypeScriptType;\nexport var TypeSystem;\n\n(function (TypeSystem) {\n  TypeSystem[\"JAVASCRIPT\"] = \"JavaScript\";\n  TypeSystem[\"FLOW\"] = \"Flow\";\n  TypeSystem[\"TYPESCRIPT\"] = \"TypeScript\";\n  TypeSystem[\"UNKNOWN\"] = \"Unknown\";\n})(TypeSystem || (TypeSystem = {}));", "import \"core-js/modules/es.object.to-string.js\";\nvar BLACKLIST = ['null', 'undefined'];\nexport function isDefaultValueBlacklisted(value) {\n  return BLACKLIST.some(function (x) {\n    return x === value;\n  });\n}", "export var str = function str(obj) {\n  if (!obj) {\n    return '';\n  }\n\n  if (typeof obj === 'string') {\n    return obj;\n  }\n\n  throw new Error(\"Description: expected string, got: \".concat(JSON.stringify(obj)));\n};", "import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\n\n/* eslint-disable no-underscore-dangle */\nimport { str } from './string';\nexport function hasDocgen(component) {\n  return !!component.__docgenInfo;\n}\nexport function isValidDocgenSection(docgenSection) {\n  return docgenSection != null && Object.keys(docgenSection).length > 0;\n}\nexport function getDocgenSection(component, section) {\n  return hasDocgen(component) ? component.__docgenInfo[section] : null;\n}\nexport function getDocgenDescription(component) {\n  return hasDocgen(component) && str(component.__docgenInfo.description);\n}", "import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nexport var MAX_TYPE_SUMMARY_LENGTH = 90;\nexport var MAX_DEFAULT_VALUE_SUMMARY_LENGTH = 50;\nexport function isTooLongForTypeSummary(value) {\n  return value.length > MAX_TYPE_SUMMARY_LENGTH;\n}\nexport function isTooLongForDefaultValueSummary(value) {\n  return value.length > MAX_DEFAULT_VALUE_SUMMARY_LENGTH;\n}\nexport function createSummaryValue(summary, detail) {\n  if (summary === detail) {\n    return {\n      summary: summary\n    };\n  }\n\n  return {\n    summary: summary,\n    detail: detail\n  };\n}\nexport var normalizeNewlines = function normalizeNewlines(string) {\n  return string.replace(/\\\\r\\\\n/g, '\\\\n');\n};", "import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { createSummaryValue, isTooLongForTypeSummary } from '../../utils';\nvar FlowTypesType;\n\n(function (FlowTypesType) {\n  FlowTypesType[\"UNION\"] = \"union\";\n  FlowTypesType[\"SIGNATURE\"] = \"signature\";\n})(FlowTypesType || (FlowTypesType = {}));\n\nfunction generateUnionElement(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      elements = _ref.elements,\n      raw = _ref.raw;\n\n  if (value != null) {\n    return value;\n  }\n\n  if (elements != null) {\n    return elements.map(generateUnionElement).join(' | ');\n  }\n\n  if (raw != null) {\n    return raw;\n  }\n\n  return name;\n}\n\nfunction generateUnion(_ref2) {\n  var name = _ref2.name,\n      raw = _ref2.raw,\n      elements = _ref2.elements;\n\n  if (elements != null) {\n    return createSummaryValue(elements.map(generateUnionElement).join(' | '));\n  }\n\n  if (raw != null) {\n    // Flow Unions can be defined with or without a leading `|` character, so try to remove it.\n    return createSummaryValue(raw.replace(/^\\|\\s*/, ''));\n  }\n\n  return createSummaryValue(name);\n}\n\nfunction generateFuncSignature(_ref3) {\n  var type = _ref3.type,\n      raw = _ref3.raw;\n\n  if (raw != null) {\n    return createSummaryValue(raw);\n  }\n\n  return createSummaryValue(type);\n}\n\nfunction generateObjectSignature(_ref4) {\n  var type = _ref4.type,\n      raw = _ref4.raw;\n\n  if (raw != null) {\n    return !isTooLongForTypeSummary(raw) ? createSummaryValue(raw) : createSummaryValue(type, raw);\n  }\n\n  return createSummaryValue(type);\n}\n\nfunction generateSignature(flowType) {\n  var type = flowType.type;\n  return type === 'object' ? generateObjectSignature(flowType) : generateFuncSignature(flowType);\n}\n\nfunction generateDefault(_ref5) {\n  var name = _ref5.name,\n      raw = _ref5.raw;\n\n  if (raw != null) {\n    return !isTooLongForTypeSummary(raw) ? createSummaryValue(raw) : createSummaryValue(name, raw);\n  }\n\n  return createSummaryValue(name);\n}\n\nexport function createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  if (type == null) {\n    return null;\n  }\n\n  switch (type.name) {\n    case FlowTypesType.UNION:\n      return generateUnion(type);\n\n    case FlowTypesType.SIGNATURE:\n      return generateSignature(type);\n\n    default:\n      return generateDefault(type);\n  }\n}", "import \"core-js/modules/es.function.name.js\";\nimport { createSummaryValue, isTooLongForDefaultValueSummary } from '../../utils';\nimport { isDefaultValueBlacklisted } from '../utils/defaultValue';\nexport function createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      return !isTooLongForDefaultValueSummary(value) ? createSummaryValue(value) : createSummaryValue(type.name, value);\n    }\n  }\n\n  return null;\n}", "import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { createType } from './createType';\nimport { createDefaultValue } from './createDefaultValue';\nexport var createFlowPropDef = function createFlowPropDef(propName, docgenInfo) {\n  var flowType = docgenInfo.flowType,\n      description = docgenInfo.description,\n      required = docgenInfo.required,\n      defaultValue = docgenInfo.defaultValue;\n  return {\n    name: propName,\n    type: createType(flowType),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(defaultValue, flowType)\n  };\n};", "import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createSummaryValue } from '../../utils';\nexport function createType(_ref) {\n  var tsType = _ref.tsType,\n      required = _ref.required;\n\n  // A type could be null if a defaultProp has been provided without a type definition.\n  if (tsType == null) {\n    return null;\n  }\n\n  if (!required) {\n    return createSummaryValue(tsType.name.replace(' | undefined', ''));\n  }\n\n  return createSummaryValue(tsType.name);\n}", "import { createSummaryValue } from '../../utils';\nimport { isDefaultValueBlacklisted } from '../utils/defaultValue';\nexport function createDefaultValue(_ref) {\n  var defaultValue = _ref.defaultValue;\n\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}", "import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { createType } from './createType';\nimport { createDefaultValue } from './createDefaultValue';\nexport var createTsPropDef = function createTsPropDef(propName, docgenInfo) {\n  var description = docgenInfo.description,\n      required = docgenInfo.required;\n  return {\n    name: propName,\n    type: createType(docgenInfo),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(docgenInfo)\n  };\n};", "import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.map.js\";\n\n/* eslint-disable no-case-declarations */\nvar convertSig = function convertSig(type) {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      var values = {};\n      type.signature.properties.forEach(function (prop) {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(\"Unknown: \".concat(type));\n  }\n};\n\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name: name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n    case 'intersection':\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};", "import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.map.js\";\n\n/* eslint-disable no-case-declarations */\nvar isLiteral = function isLiteral(type) {\n  return type.name === 'literal';\n};\n\nvar toEnumOption = function toEnumOption(element) {\n  return element.value.replace(/['|\"]/g, '');\n};\n\nvar convertSig = function convertSig(type) {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      var values = {};\n      type.signature.properties.forEach(function (prop) {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(\"Unknown: \".concat(type));\n  }\n};\n\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'literal':\n      return Object.assign({}, base, {\n        name: 'other',\n        value: type.value\n      });\n\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name: name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n      if (type.elements.every(isLiteral)) {\n        return Object.assign({}, base, {\n          name: 'enum',\n          value: type.elements.map(toEnumOption)\n        });\n      }\n\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n\n    case 'intersection':\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};", "import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\n/* eslint-disable no-case-declarations */\nimport mapValues from 'lodash/mapValues';\nimport { includesQuotes, trimQuotes } from '../utils';\nvar SIGNATURE_REGEXP = /^\\(.*\\) => /;\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw,\n      computed = type.computed,\n      value = type.value;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (name) {\n    case 'enum':\n      {\n        var _values = computed ? value : value.map(function (v) {\n          var trimmedValue = trimQuotes(v.value);\n          return includesQuotes(v.value) || Number.isNaN(Number(trimmedValue)) ? trimmedValue : Number(trimmedValue);\n        });\n\n        return Object.assign({}, base, {\n          name: name,\n          value: _values\n        });\n      }\n\n    case 'string':\n    case 'number':\n    case 'symbol':\n      return Object.assign({}, base, {\n        name: name\n      });\n\n    case 'func':\n      return Object.assign({}, base, {\n        name: 'function'\n      });\n\n    case 'bool':\n    case 'boolean':\n      return Object.assign({}, base, {\n        name: 'boolean'\n      });\n\n    case 'arrayOf':\n    case 'array':\n      return Object.assign({}, base, {\n        name: 'array',\n        value: value && convert(value)\n      });\n\n    case 'object':\n      return Object.assign({}, base, {\n        name: name\n      });\n\n    case 'objectOf':\n      return Object.assign({}, base, {\n        name: name,\n        value: convert(value)\n      });\n\n    case 'shape':\n    case 'exact':\n      var values = mapValues(value, function (field) {\n        return convert(field);\n      });\n      return Object.assign({}, base, {\n        name: 'object',\n        value: values\n      });\n\n    case 'union':\n      return Object.assign({}, base, {\n        name: 'union',\n        value: value.map(function (v) {\n          return convert(v);\n        })\n      });\n\n    case 'instanceOf':\n    case 'element':\n    case 'elementType':\n    default:\n      {\n        if ((name === null || name === void 0 ? void 0 : name.indexOf('|')) > 0) {\n          // react-docgen-typescript-plugin doesn't always produce enum-like unions\n          // (like if a user has turned off shouldExtractValuesFromUnion) so here we\n          // try to recover and construct one.\n          try {\n            var literalValues = name.split('|').map(function (v) {\n              return JSON.parse(v);\n            });\n            return Object.assign({}, base, {\n              name: 'enum',\n              value: literalValues\n            });\n          } catch (err) {// fall through\n          }\n        }\n\n        var otherVal = value ? \"\".concat(name, \"(\").concat(value, \")\") : name;\n        var otherName = SIGNATURE_REGEXP.test(name) ? 'function' : 'other';\n        return Object.assign({}, base, {\n          name: otherName,\n          value: otherVal\n        });\n      }\n  }\n};", "import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nvar QUOTE_REGEX = /^['\"]|['\"]$/g;\nexport var trimQuotes = function trimQuotes(str) {\n  return str.replace(QUOTE_REGEX, '');\n};\nexport var includesQuotes = function includesQuotes(str) {\n  return QUOTE_REGEX.test(str);\n};", "import { convert as tsConvert } from './typescript';\nimport { convert as flowConvert } from './flow';\nimport { convert as propTypesConvert } from './proptypes';\nexport var convert = function convert(docgenInfo) {\n  var type = docgenInfo.type,\n      tsType = docgenInfo.tsType,\n      flowType = docgenInfo.flowType;\n  if (type != null) return propTypesConvert(type);\n  if (tsType != null) return tsConvert(tsType);\n  if (flowType != null) return flowConvert(flowType);\n  return null;\n};", "import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { TypeSystem } from './types';\nimport { createSummaryValue } from '../utils';\nimport { createFlowPropDef } from './flow/createPropDef';\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\nimport { createTsPropDef } from './typeScript/createPropDef';\nimport { convert } from '../convert';\n\nfunction createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  return type != null ? createSummaryValue(type.name) : null;\n} // A heuristic to tell if a defaultValue comes from RDT\n\n\nfunction isReactDocgenTypescript(defaultValue) {\n  var computed = defaultValue.computed,\n      func = defaultValue.func;\n  return typeof computed === 'undefined' && typeof func === 'undefined';\n}\n\nfunction isStringValued(type) {\n  if (!type) {\n    return false;\n  }\n\n  if (type.name === 'string') {\n    return true;\n  }\n\n  if (type.name === 'enum') {\n    return Array.isArray(type.value) && type.value.every(function (_ref) {\n      var tv = _ref.value;\n      return typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"';\n    });\n  }\n\n  return false;\n}\n\nfunction createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\n      // default, instead of \"'string'\" -- which is incorrect\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\n        return createSummaryValue(JSON.stringify(value));\n      }\n\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}\n\nfunction createBasicPropDef(name, type, docgenInfo) {\n  var description = docgenInfo.description,\n      required = docgenInfo.required,\n      defaultValue = docgenInfo.defaultValue;\n  return {\n    name: name,\n    type: createType(type),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(defaultValue, type)\n  };\n}\n\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\n  if (jsDocParsingResult.includesJsDoc) {\n    var description = jsDocParsingResult.description,\n        extractedTags = jsDocParsingResult.extractedTags;\n\n    if (description != null) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.description = jsDocParsingResult.description;\n    }\n\n    var hasParams = extractedTags.params != null;\n    var hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\n\n    if (hasParams || hasReturns) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.jsDocTags = {\n        params: hasParams && extractedTags.params.map(function (x) {\n          return {\n            name: x.getPrettyName(),\n            description: x.description\n          };\n        }),\n        returns: hasReturns && {\n          description: extractedTags.returns.description\n        }\n      };\n    }\n  }\n\n  return propDef;\n}\n\nexport var javaScriptFactory = function javaScriptFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var tsFactory = function tsFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createTsPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var flowFactory = function flowFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createFlowPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var unknownFactory = function unknownFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, {\n    name: 'unknown'\n  }, docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var getPropDefFactory = function getPropDefFactory(typeSystem) {\n  switch (typeSystem) {\n    case TypeSystem.JAVASCRIPT:\n      return javaScriptFactory;\n\n    case TypeSystem.TYPESCRIPT:\n      return tsFactory;\n\n    case TypeSystem.FLOW:\n      return flowFactory;\n\n    default:\n      return unknownFactory;\n  }\n};", "import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { parseJsDoc } from '../jsdocParser';\nimport { TypeSystem } from './types';\nimport { getDocgenSection, isValidDocgenSection, getDocgenDescription } from './utils';\nimport { getPropDefFactory } from './createPropDef';\n\nvar getTypeSystem = function getTypeSystem(docgenInfo) {\n  if (docgenInfo.type != null) {\n    return TypeSystem.JAVASCRIPT;\n  }\n\n  if (docgenInfo.flowType != null) {\n    return TypeSystem.FLOW;\n  }\n\n  if (docgenInfo.tsType != null) {\n    return TypeSystem.TYPESCRIPT;\n  }\n\n  return TypeSystem.UNKNOWN;\n};\n\nexport var extractComponentSectionArray = function extractComponentSectionArray(docgenSection) {\n  var typeSystem = getTypeSystem(docgenSection[0]);\n  var createPropDef = getPropDefFactory(typeSystem);\n  return docgenSection.map(function (item) {\n    var _item$type;\n\n    var sanitizedItem = item;\n\n    if ((_item$type = item.type) !== null && _item$type !== void 0 && _item$type.elements) {\n      sanitizedItem = Object.assign({}, item, {\n        type: Object.assign({}, item.type, {\n          value: item.type.elements\n        })\n      });\n    }\n\n    return extractProp(sanitizedItem.name, sanitizedItem, typeSystem, createPropDef);\n  });\n};\nexport var extractComponentSectionObject = function extractComponentSectionObject(docgenSection) {\n  var docgenPropsKeys = Object.keys(docgenSection);\n  var typeSystem = getTypeSystem(docgenSection[docgenPropsKeys[0]]);\n  var createPropDef = getPropDefFactory(typeSystem);\n  return docgenPropsKeys.map(function (propName) {\n    var docgenInfo = docgenSection[propName];\n    return docgenInfo != null ? extractProp(propName, docgenInfo, typeSystem, createPropDef) : null;\n  }).filter(Boolean);\n};\nexport var extractComponentProps = function extractComponentProps(component, section) {\n  var docgenSection = getDocgenSection(component, section);\n\n  if (!isValidDocgenSection(docgenSection)) {\n    return [];\n  } // vue-docgen-api has diverged from react-docgen and returns an array\n\n\n  return Array.isArray(docgenSection) ? extractComponentSectionArray(docgenSection) : extractComponentSectionObject(docgenSection);\n};\n\nfunction extractProp(propName, docgenInfo, typeSystem, createPropDef) {\n  var jsDocParsingResult = parseJsDoc(docgenInfo.description);\n  var isIgnored = jsDocParsingResult.includesJsDoc && jsDocParsingResult.ignore;\n\n  if (!isIgnored) {\n    var propDef = createPropDef(propName, docgenInfo, jsDocParsingResult);\n    return {\n      propDef: propDef,\n      jsDocTags: jsDocParsingResult.extractedTags,\n      docgenInfo: docgenInfo,\n      typeSystem: typeSystem\n    };\n  }\n\n  return null;\n}\n\nexport function extractComponentDescription(component) {\n  return component != null && getDocgenDescription(component);\n}", "import { combineParameters } from '@storybook/store';\nexport var enhanceArgTypes = function enhanceArgTypes(context) {\n  var component = context.component,\n      userArgTypes = context.argTypes,\n      _context$parameters$d = context.parameters.docs,\n      docs = _context$parameters$d === void 0 ? {} : _context$parameters$d;\n  var extractArgTypes = docs.extractArgTypes;\n  var extractedArgTypes = extractArgTypes && component ? extractArgTypes(component) : {};\n  var withExtractedTypes = extractedArgTypes ? combineParameters(extractedArgTypes, userArgTypes) : userArgTypes;\n  return withExtractedTypes;\n};", "export var ADDON_ID = 'storybook/docs';\nexport var PANEL_ID = \"\".concat(ADDON_ID, \"/panel\");\nexport var PARAM_KEY = \"docs\";\nexport var SNIPPET_RENDERED = \"\".concat(ADDON_ID, \"/snippet-rendered\");\nexport var SourceType;\n\n(function (SourceType) {\n  SourceType[\"AUTO\"] = \"auto\";\n  SourceType[\"CODE\"] = \"code\";\n  SourceType[\"DYNAMIC\"] = \"dynamic\";\n})(SourceType || (SourceType = {}));", "import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.function.name.js\";\n// `addons/x` is for the monorepo, `addon-x` is for normal usage\nvar packageRe = /(addons\\/|addon-)(docs|controls)/;\nexport var hasDocsOrControls = function hasDocsOrControls(options) {\n  var _options$presetsList;\n\n  return (_options$presetsList = options.presetsList) === null || _options$presetsList === void 0 ? void 0 : _options$presetsList.some(function (preset) {\n    return packageRe.test(preset.name);\n  });\n};"],
  "mappings": "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",
  "names": ["doctrine", "parseJsDoc", "TypeSystem", "str", "import_es_regexp_exec", "import_es_regexp_exec", "FlowTypesType", "createFlowPropDef", "import_es_regexp_exec", "createType", "createDefaultValue", "createTsPropDef", "createType", "createDefaultValue", "convertSig", "convert", "import_es_regexp_exec", "isLiteral", "toEnumOption", "convertSig", "convert", "import_es_regexp_exec", "import_es_regexp_exec", "trimQuotes", "str", "includesQuotes", "convert", "mapValues", "convert", "createType", "createDefaultValue", "javaScriptFactory", "convert", "tsFactory", "flowFactory", "unknownFactory", "getPropDefFactory", "getTypeSystem", "extractComponentSectionArray", "extractComponentSectionObject", "extractComponentProps", "enhanceArgTypes", "SourceType", "import_es_regexp_exec"]
}
